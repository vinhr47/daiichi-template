#parse("/include/packages_variables.vm")
#parse("/include/init_var_entity.vm")
#parse("/include/java_header.vm")

#set( $urlEntityName = $fn.toLowerCase($entity.name))
#set( $uncapitalizedEntityName = $fn.uncapitalize($entity.name) )
#set( $referencedEntities = $entity.referencedEntityTypes() )
#set( $serviceName = "${entity.name}Service")
#set( $uncapitalizedServiceName = $fn.uncapitalize($serviceName) )
#set( $searchDtoName = "${entity.name}SearchDto")
#set( $enumSearchName = "${entity.name}SearchEnum")
#set( $dmUpper = $fn.toUpperCase($entity.name))

package ${target.javaPackageFromFolder($SRC)};

import java.util.Locale;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import vn.com.unit.constant.ConstantCore;
import vn.com.unit.constant.Message;
import vn.com.unit.constant.MessageList;
import vn.com.unit.dms.constant.AdminUrlConst;
import vn.com.unit.jcanary.constant.UrlConst;
import vn.com.unit.jcanary.constant.ViewConstant;
import vn.com.unit.jcce.controller.BaseMasterController;
import ${ROOT_PKG}.validator.${entity.name}Validator;
import vn.com.unit.jcce.dto.ImportParamsDto;

//--- import $searchDtoName
import ${servicePackage}.${serviceName};

/**
 * Spring MVC controller for '${entity.name}' management.
 */
@Controller
@RequestMapping("/${urlEntityName}-import")
public class ${entity.name}ImportController extends MasterController {

    /**Define Role for this page - ROLE_AUTHED for default*/
    private static final String SCREEN_FUNCTION_CODE = "ROLE_AUTHED"; // RoleConstant.${entity.name}
	/**Define Template Excel for Download Template & Export Excel */
	
	private static final String ALERT_MESSAGE = "message.alert";

  	private static final String MAV_FILL_IMPORT_MAIN = "${urlEntityName}.edit";

	private static final String FUNCTION_CODE = "${dmUpper}_IMPORT";
	
	private static final String CONTROLLER_NAME = "${urlEntityName}-import";


	@Autowired
    private ${serviceName} ${uncapitalizedServiceName};

	
	@RequestMapping(value = AdminUrlConst.SAVE_IMPORT, method = RequestMethod.POST)
    @ResponseBody
    public ModelAndView save(@RequestBody ImportParamsDto importParamsDto, Locale locale) {
   		// Security for this page.
        if(securityForPage(SCREEN_FUNCTION_CODE)){
			return new ModelAndView(ViewConstant.ACCESS_DENIED_MODELANDVIEW);
		}
        ModelAndView mav = new ModelAndView(ALERT_MESSAGE);
        String[] ids = importParamsDto.getIds();
        if (${uncapitalizedServiceName}.validImport(ids) && ${uncapitalizedServiceName}.saveImport(ids, importParamsDto.getSessionKey())) {
            MessageList messageList = new MessageList(Message.SUCCESS);
            String msgSuccess = msg.getMessage(ConstantCore.MSG_SUCCESS_SAVE, null, locale);
            messageList.add(msgSuccess);
            mav.addObject(ConstantCore.MSG_LIST, messageList);
            return mav;
        }

        MessageList messageList = new MessageList(Message.ERROR);
        String msgError = msg.getMessage(ConstantCore.MSG_FAIL_SAVE, null, locale);
        messageList.add(msgError);
        mav.addObject(ConstantCore.MSG_LIST, messageList);
        return mav;
    }

	 @RequestMapping(value = UrlConst.DETAIL, method = {RequestMethod.GET, RequestMethod.POST})
	 @ResponseBody
	    public ModelAndView importDetail(
	            @RequestParam(value = "code", required = false) String code,
	            @RequestParam(value = "sessionKey", required = false) String sessionKey, Locale locale) {
	        
	        ModelAndView mav = new ModelAndView(MAV_FILL_IMPORT_MAIN);
	        ${entity.name}Dto dto = ${uncapitalizedServiceName}.getDtoFromImport(code, sessionKey);
	        mav.addObject("sessionKey", sessionKey);
	        mav.addObject("${uncapitalizedEntityName}Dto", dto);
	        return mav;
	    }
}
