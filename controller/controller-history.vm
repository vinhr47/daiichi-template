#parse("/include/packages_variables.vm")
#parse("/include/init_var_entity.vm")
#parse("/include/java_header.vm")

#set( $urlEntityName = $fn.toLowerCase($entity.name))
#set( $serviceName = "${entity.name}HistService")
#set( $uncapitalizedServiceName = $fn.uncapitalize($serviceName) )
#set( $searchDtoName = "${entity.name}HistSearchDto")

package ${target.javaPackageFromFolder($SRC)};

import java.util.Locale;
import javax.servlet.http.HttpServletRequest;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;


import vn.com.unit.constant.ConstantCore;
import vn.com.unit.jcanary.common.PageWrapper;
import vn.com.unit.jcanary.constant.UrlConst;
import vn.com.unit.jcanary.constant.ViewConstant;
import vn.com.unit.jcanary.utils.SearchSessionUtils;
import vn.com.unit.jcanary.controller.MasterController;
import org.springframework.web.bind.annotation.PostMapping;
import ${ROOT_PKG}.validator.${entity.name}Validator;
import ${ROOT_PKG}.entity.${entity.name}Import;
import vn.com.unit.dms.constant.DmsUrlConst;
//--- import entity Dto
import ${dtoPackage}.${entity.name}Dto;
//--- import SearchDto
import ${dtoPackage}.${searchDtoName};
//--- import $searchDtoName
import ${servicePackage}.${serviceName};

/**
 * Spring MVC controller for '${entity.name}' management.
 */
@Controller
@RequestMapping("/${urlEntityName}hist")
public class ${entity.name}HistController extends MasterController {

    /**Define Role for this page - ROLE_AUTHED for default*/
    private static final String SCREEN_FUNCTION_CODE = "ROLE_AUTHED"; // RoleConstant.${entity.name}
	private static final String URL_LIST = "${urlEntityName}" + UrlConst.LIST;
	@Autowired
    private ${serviceName} ${uncapitalizedServiceName};


    @RequestMapping(value = UrlConst.AJAX_HISTORY, method = RequestMethod.POST)
    @ResponseBody
    public ModelAndView postListHistory( @ModelAttribute(value = "searchDto") ${searchDtoName} searchHistDto, @RequestParam(value = "pageSize", required = false, defaultValue = "0") int pageSize,
                                         @RequestParam(value = ConstantCore.PAGE, required = false, defaultValue = "1") int page,HttpServletRequest request)
    {
        // Security for this page.
        if(securityForPage(SCREEN_FUNCTION_CODE)){
            return new ModelAndView(ViewConstant.ACCESS_DENIED_MODELANDVIEW);
        }
        ModelAndView modelAndView =  new ModelAndView("${urlEntityName}.table.history");
        /* use for get link */
        SearchSessionUtils<${searchDtoName}> search = new SearchSessionUtils<${searchDtoName}>(searchHistDto, page, pageSize);
        String URL_LIST = "${urlEntityName}" + UrlConst.LIST;
        searchDto = search.getSearchAttribute(request, URL_LIST, searchHistDto);
        page = search.getCurrentPageFromSession(request);
        pageSize = search.getSizeOfPageFromSession(request);
        /* END */
        // set url page
        String url = DmsUrlConst.PARTNER_MANAGEMENT.concat(DmsUrlConst.LINE);
        // Init PageWrapper LIST
        modelAndView.addObject("searchDto",searchDto);
        modelAndView.addObject("pageUrl", url);
        modelAndView.addObject("pageWrapperHist", ${uncapitalizedServiceName}.searchHistory(page, searchHistDto, pageSize));
        return modelAndView;
    }


}
